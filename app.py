# ‚úÖ Suenia - app.py con grabaci√≥n real v√≠a streamlit-audiorecorder
import streamlit as st
import requests
import tempfile
import base64
from streamlit_audiorecorder import audiorecorder
from utils_gpt import interpretar_sueno
from utils_audio import reproducir_texto_en_audio

st.set_page_config(page_title="üí§ Suenia | Interpretaci√≥n de Sue√±os", layout="centered")

st.markdown("<h1 style='text-align: center;'>üí§ Suenia | Interpretaci√≥n de Sue√±os</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center;'>Describe aqu√≠ tu sue√±o si no vas a grabarlo...</p>", unsafe_allow_html=True)

# Entrada manual
sueno_texto = st.text_input("‚úçÔ∏è Escribe tu sue√±o aqu√≠...")

# Grabador de audio real
st.markdown("## üéôÔ∏è O graba tu sue√±o con tu voz:")
audio_data = audiorecorder("üé§ Iniciar grabaci√≥n", "‚èπÔ∏è Detener grabaci√≥n")

# Mostrar checkbox si hay audio v√°lido
usar_audio = False
if isinstance(audio_data, bytes) and len(audio_data) > 10000:
    usar_audio = st.checkbox("Usar grabaci√≥n de voz en lugar del texto escrito")

# Acci√≥n principal
if st.button("Interpretar mi sue√±o"):
    if usar_audio:
        try:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as f:
                f.write(audio_data)
                audio_path = f.name

            files = {'audio': open(audio_path, 'rb')}
            response = requests.post("https://grabador-backend.onrender.com/transcribir", files=files)
            response.raise_for_status()
            transcripcion = response.json().get("transcripcion", "").strip()

            if not transcripcion:
                st.warning("No se pudo transcribir el audio.")
                st.stop()

            st.markdown("### üìù Transcripci√≥n del sue√±o:")
            st.text_area("Texto transcrito:", value=transcripcion, height=160)
            sueno_procesar = transcripcion

        except Exception as e:
            st.error(f"‚ùå Error al enviar el audio: {str(e)}")
            st.stop()

    elif sueno_texto.strip():
        sueno_procesar = sueno_texto.strip()
    else:
        st.warning("Por favor, escribe o graba un sue√±o.")
        st.stop()

    # Interpretaci√≥n con GPT
    interpretacion = interpretar_sueno(sueno_procesar)
    st.markdown("### üîÆ Interpretaci√≥n del Sue√±o:")
    st.write(interpretacion)

    if st.checkbox("üîä Escuchar interpretaci√≥n en voz"):
        audio_file = reproducir_texto_en_audio(interpretacion)
        if audio_file:
            st.audio(audio_file)
